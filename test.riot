// fibonacci

fn fibonacci(n: int): int {
    if (n <= 1) {
        return n
    }
    return fibonacci(n - 1) + fibonacci(n - 2)
}

// Factorial

fn factorial(n: int): int {
    if (n <= 1) {
        return 1
    }
    return n * factorial(n - 1)
}

// FizzBuzz

fn fizzbuzz(n: int): str {
    if (n % 15 == 0) {
        return "FizzBuzz"
    } else if (n % 3 == 0) {
        return "Fizz"
    } else if (n % 5 == 0) {
        return "Buzz"
    } else {
        return ""
    }
}

// while loop

fn while_loop(n: int): int {
    let i: int = 0
    while (i < n) {
        i = i + 1
    }
    return i
}


let n: int = while_loop(10)

// for loop

fn for_loop(n: int): int {
    let sum: int = 0
    for (let i: int = 0; i < n; i = i + 1) {
        sum = sum + i
    }
    return sum
}

let sum: int = for_loop(10)

// if statement

fn if_statement(n: int): int {
    if (n < 10) {
        return 0
    } else if (n < 20) {
        return 1
    } else {
        return 2
    }
}

let result: int = if_statement(15)

// function call

let fib: int = fibonacci(10)

let fact: int = factorial(10)

let fizz: str = fizzbuzz(15)

// for loop with range

fn for_loop_range(n: int): int {
    let sum: int = 0
    for (let i: int in 0..10) {
        sum = sum + i
    }
    return sum
}

let sum_range: int = for_loop_range(10)

let strs: str[] = ['hello', 'world', 'again']

let str: str = strs[10]

type User = {name: str, age: int}

// let user:User  = {name: 'John', age: 20}